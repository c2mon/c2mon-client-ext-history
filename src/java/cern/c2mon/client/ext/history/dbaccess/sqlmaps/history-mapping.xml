<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
  "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

  <!--
    This mapper first defines which interface ("namespace") that should be instantiated
    by iBatis.
    The functions within defines the functions in the mapper's interface. And the function's
    parameter.
  -->
<mapper namespace="cern.c2mon.client.ext.history.dbaccess.HistoryMapper">

  <!--
      Defines what object every single row will be converted into,
      and how this object is mapped from the sql table
  -->
  <resultMap id="historyRecordResultMap" type="HistoryRecord">
    <constructor>
      <idArg column="TAGID" javaType="Long"/>
    </constructor>
    <result property="logDate" column="LOGDATE" jdbcType="TIMESTAMP" />
    <result property="tagName" column="TAGNAME" jdbcType="VARCHAR"/>
    <result property="tagValue" column="TAGVALUE" jdbcType="VARCHAR"/>
    <result property="tagValueDesc" column="TAGVALUEDESC" jdbcType="VARCHAR"/>
    
    <result property="tagDataType" column="TAGDATATYPE" jdbcType="VARCHAR"/>
    
    <result property="tagTime" column="TAGTIME" jdbcType="TIMESTAMP"/>
    <result property="daqTime" column="TAGDAQTIME" jdbcType="TIMESTAMP"/>
    <result property="serverTime" column="TAGSERVERTIME" jdbcType="TIMESTAMP"/>
    
    <result property="dataTagQuality" column="TAGSTATUSDESC" jdbcType="VARCHAR" javaType="DataTagQuality"/>
    <result property="tagMode" column="TAGMODE"/>
    <result property="fromInitialSnapshot" column="FROMSNAPSHOT"/>
  </resultMap>
  
  <resultMap id="SupervisionRecordResultMap" type="SupervisionRecordBean">
    <constructor>
      <idArg column="SUL_ENTITY" javaType="SupervisionEntity" />
      <idArg column="SUL_ID" javaType="Long" />
    </constructor>
    
    <result property="date" column="SUL_DATE" jdbcType="TIMESTAMP" />
    <result property="status" column="SUL_STATUS" jdbcType="VARCHAR" javaType="SupervisionStatus" />
    <result property="message" column="SUL_MESSAGE" jdbcType="VARCHAR" />
    
  </resultMap>

  <!--
    Requests the history records of a list of tags from the short term log
  -->
  <select   id="getRecords" 
            parameterType="ShortTermLogHistoryRequestBean"
            resultMap="historyRecordResultMap">
            
    <if test="maxRecords != null">
      SELECT * FROM (
    </if>
    
    SELECT 
        LOGDATE, TAGID, TAGNAME, TAGVALUE,  TAGVALUEDESC, TAGDATATYPE, 
        TAGTIME, TAGDAQTIME, TAGSERVERTIME, TAGSTATUSDESC, TAGMODE
    FROM SHORTTERMLOG
    WHERE
      (TAGID IN 
        <foreach item="tag" index="index" collection="tagIds"
          open="(" separator="," close=")">
          #{tag}
        </foreach>
      )
      <if test="fromTime != null">
        AND TAGSERVERTIME <![CDATA[ >= ]]> SYS_EXTRACT_UTC(#{fromTime})
      </if>
      <if test="toTime != null">
        AND TAGSERVERTIME <![CDATA[ < ]]> SYS_EXTRACT_UTC(#{toTime})
      </if>
      <if test="maxRecords != null">
        ORDER BY TAGSERVERTIME DESC, TAGDAQTIME DESC, TAGTIME DESC
          )
          WHERE ROWNUM <![CDATA[ <= ]]> #{maxRecords}
      </if>
  </select>

  <!--
    Requests the initial value for the given tag.
    Searches the initial log and from the 00:00 of the day where the log is requested to the start time
    of the request. Then the latest record is returned.
  -->
  <select   id="getInitialRecord" 
            parameterType="InitialRecordHistoryRequestBean"
            resultMap="historyRecordResultMap">
    SELECT * FROM (
        SELECT LOGDATE, TAGID, TAGNAME, TAGVALUE, TAGVALUEDESC, TAGDATATYPE, TAGTIME, TAGDAQTIME, TAGSERVERTIME, TAGSTATUSDESC, TAGMODE, 0 AS FROMSNAPSHOT
        FROM SHORTTERMLOG
        WHERE
            tagid = #{tagId}
            AND
            (
              SELECT COUNT(*)
              FROM STL_DAY_SNAPSHOT SNAPSHOT
              WHERE SNAPSHOT.TAGID = #{tagId}
              AND SNAPSHOT.LOGDATE = TRUNC(SYS_EXTRACT_UTC(#{beforeTime}), 'DD')
              AND SNAPSHOT.TAGSERVERTIME <![CDATA[ < ]]> SNAPSHOT.LOGDATE
            ) = 0
            AND TAGSERVERTIME <![CDATA[ >= ]]> TRUNC(SYS_EXTRACT_UTC(#{beforeTime}), 'DD')
            AND TAGSERVERTIME <![CDATA[ <= ]]> SYS_EXTRACT_UTC(#{beforeTime})
        UNION ALL
        SELECT LOGDATE+1 as LOGDATE, TAGID, TAGNAME, TAGVALUE, TAGVALUEDESC, TAGDATATYPE, TAGTIME, TAGDAQTIME, TAGSERVERTIME, TAGSTATUSDESC, TAGMODE, 1 AS FROMSNAPSHOT
        FROM STL_DAY_SNAPSHOT
        WHERE
            tagid = #{tagId}
            AND LOGDATE = TRUNC(SYS_EXTRACT_UTC(#{beforeTime}), 'DD') - 1
        ORDER BY 8 DESC, 7 DESC, 6 DESC, 1 DESC
    )
    WHERE rownum <![CDATA[ <= 1 ]]>
  </select>
  
  <!--
    Requests all daily snapshot data for the given set of tags, and the given time span.
    The data is requeted from the daily snapshot table.
  -->
  <select   id="getDailySnapshotRecords" 
            parameterType="DailySnapshotRequestBean"
            resultMap="historyRecordResultMap">
    SELECT LOGDATE+1 as LOGDATE, TAGID, TAGNAME, TAGVALUE, TAGVALUEDESC, TAGDATATYPE, TAGTIME, TAGDAQTIME, TAGSERVERTIME, TAGSTATUSDESC, TAGMODE, 1 AS FROMSNAPSHOT
    FROM STL_DAY_SNAPSHOT
    WHERE
        (TAGID in 
          <foreach item="tag" index="index" collection="tagIds"
            open="(" separator="," close=")">
            #{tag}
          </foreach>
        )
        AND LOGDATE <![CDATA[ >= ]]> TRUNC(#{fromTime}, 'DD')
        AND LOGDATE <![CDATA[ <= ]]> TRUNC(#{toTime}, 'DD')
  </select>
  
  <!--
    Requests supervision events matching the request parameter
   -->
  <select   id="getSupervisionEvents" 
            parameterType="SupervisionEventRequestBean"
            resultMap="SupervisionRecordResultMap">
    SELECT SUL_ENTITY, SUL_ID, SUL_DATE, SUL_STATUS, SUL_MESSAGE
    FROM SUPERVISION_LOG
    WHERE
        (SUL_ID = #{id})
        AND (SUL_ENTITY LIKE #{entity})
        <if test="fromTime != null ">
            <if test="toTime != null">
              AND SUL_DATE BETWEEN SYS_EXTRACT_UTC(#{fromTime}) AND SYS_EXTRACT_UTC(#{toTime})
            </if>
        </if>
    ORDER BY SUL_DATE ASC
  </select>
  
  <!--
    Requests the initial supervision event matching the request parameter
   -->
  <select   id="getInitialSupervisionEvents" 
            parameterType="SupervisionEventRequestBean"
            resultMap="SupervisionRecordResultMap">
    SELECT * FROM (
      SELECT SUL_ENTITY, SUL_ID, SUL_DATE, SUL_STATUS, SUL_MESSAGE
      FROM SUPERVISION_LOG
      WHERE
          (SUL_ID = #{id})
          AND (SUL_ENTITY LIKE #{entity})
          AND SUL_DATE <![CDATA[ <= ]]> SYS_EXTRACT_UTC(#{fromTime})
      ORDER BY SUL_DATE DESC
    )
    WHERE rownum <![CDATA[ <= 1 ]]>
  </select>
  
</mapper>

